#compdef repose

_keys() {
  # From _pacman completion
  local keylist keys
  keylist=$(pacman-key --list-keys 2>/dev/null | awk '
    $1 == "pub" {
      # key id
      split($2, a, "/"); print a[2]
    }
    $1 == "uid" {
      # email
      if (match($NF, /<[^>]+>/))
        print substr($NF, RSTART + 1, RLENGTH - 2)
    #this adds support for names as well if that is ever added
      }
    $1 == "uid" {
    for (i=2;i<NF;i++) {printf "%s%s",sep, $i;sep=" "}; printf "\n"
    }' |sed -e 's/(.*)//g' -e 's/^\ //g' -e 's/\ *$//g' |uniq
    )
    keys=(${(s:/:)${keylist//$'\n'/\/}})
  _describe -t modules 'keys in keyring' keys && return 0
}

_arguments -s \
  {-h,--help}'[display this help and exit]' \
  {-v,--version}'[display version]' \
  {-U,--update}'[update the database]' \
  {-R,--remove}'[remove an entry]' \
  {-Q,--query}'[query the database]' \
  {-V,--verify}'[verify the contents of the database]' \
  {-i,--info}'[show package info]' \
  {-p,--pool=-}'[set the pool to find packages in it]:pool:_directories' \
  {-c,--clean}'[remove stuff]' \
  {-f,--files}'[generate complementing files database]' \
  {-a,--arch=-}'[the primary architecture of the database]:arch:(i686 x86_64)' \
  {-s,--sign}'[sign the database(s) with GnuPG after the update]' \
  {-k,--key=-}'[use the specified key to sign the database]:keys:_keys' \
  '--color=-[enable colour support]:colors:(never always auto)' \
  '--rebuild[force rebuild the repo]' \
  '1:database:_files -g "*.db*~*.sig(.,@)"' \
  '*::package files:_files -g "*.pkg.tar*~*.sig(.,@)"'
